---

- name: "Kubernetes Apps | Lay Down GlusterFS Daemonset"
  template: { src: "glusterfs-daemonset.json.j2", dest: "{{ kube_config_dir }}/glusterfs-daemonset.json" }
  become: true
  register: "rendering"
- name: "Kubernetes Apps | Install and configure GlusterFS daemonset"
  command: kubectl --kubeconfig=/home/admin/.kube/config apply -f /etc/kubernetes/glusterfs-daemonset.json

- name: "Kubernetes Apps | Label GlusterFS nodes"
  include_tasks: "glusterfs/label.yml"
  with_items: "{{ groups['tag_heketi-node'] }}"
  loop_control:
    loop_var: "node"

- name: "Kubernetes Apps | Wait for daemonset to become available."
  register: "daemonset_state"
  command: "kubectl --kubeconfig=/home/admin/.kube/config get daemonset glusterfs --output=json --ignore-not-found=true"
  changed_when: false
  vars:
    daemonset_state: { stdout: "{}" }
    ready: "{{ daemonset_state.stdout|from_json|json_query(\"status.numberReady\") }}"
    desired: "{{ daemonset_state.stdout|from_json|json_query(\"status.desiredNumberScheduled\") }}"
  until: "ready | int >= 3"
  retries: 60
  delay: 5

- name: "Kubernetes Apps | Lay Down Heketi Service Account"
  template: { src: "heketi-service-account.json.j2", dest: "{{ kube_config_dir }}/heketi-service-account.json" }
  become: true
  register: "rendering"

- name: "Kubernetes Apps | Install and configure Heketi Service Account"
  command: kubectl --kubeconfig=/home/admin/.kube/config apply -f /etc/kubernetes/heketi-service-account.json
